/*
 * generated by Xtext
 */
package de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.hub.modsoft.twittersearch.xtext.services.TwitterSearchGrammarAccess;

public class TwitterSearchParser extends AbstractContentAssistParser {
	
	@Inject
	private TwitterSearchGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal.InternalTwitterSearchParser createParser() {
		de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal.InternalTwitterSearchParser result = new de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal.InternalTwitterSearchParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTwitterTypeAccess().getAlternatives(), "rule__TwitterType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getTwitterPrimitiveTypeAccess().getGroup(), "rule__TwitterPrimitiveType__Group__0");
					put(grammarAccess.getTwitterObjectTypeAccess().getGroup(), "rule__TwitterObjectType__Group__0");
					put(grammarAccess.getFieldDclrAccess().getGroup(), "rule__FieldDclr__Group__0");
					put(grammarAccess.getDOUBLEAccess().getGroup(), "rule__DOUBLE__Group__0");
					put(grammarAccess.getDOUBLEAccess().getGroup_2(), "rule__DOUBLE__Group_2__0");
					put(grammarAccess.getDATEAccess().getGroup(), "rule__DATE__Group__0");
					put(grammarAccess.getModelAccess().getTwitterTypesAssignment_3(), "rule__Model__TwitterTypesAssignment_3");
					put(grammarAccess.getModelAccess().getSearchesAssignment_7(), "rule__Model__SearchesAssignment_7");
					put(grammarAccess.getTwitterPrimitiveTypeAccess().getNameAssignment_1(), "rule__TwitterPrimitiveType__NameAssignment_1");
					put(grammarAccess.getTwitterObjectTypeAccess().getNameAssignment_1(), "rule__TwitterObjectType__NameAssignment_1");
					put(grammarAccess.getTwitterObjectTypeAccess().getFieldsAssignment_3(), "rule__TwitterObjectType__FieldsAssignment_3");
					put(grammarAccess.getFieldDclrAccess().getNameAssignment_1(), "rule__FieldDclr__NameAssignment_1");
					put(grammarAccess.getFieldDclrAccess().getTypeAssignment_3(), "rule__FieldDclr__TypeAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal.InternalTwitterSearchParser typedParser = (de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal.InternalTwitterSearchParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TwitterSearchGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TwitterSearchGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
