/*
 * generated by Xtext
 */
package de.hub.modsoft.twittersearch.xtext.validation

import de.hub.modsoft.twittersearch.model.FieldExpr
import de.hub.modsoft.twittersearch.model.Search
import org.eclipse.xtext.validation.Check
import de.hub.modsoft.twittersearch.model.TwitterSearchPackage
import de.hub.modsoft.twittersearch.model.Condition

class TwitterSearchValidator extends AbstractTwitterSearchValidator {
	
	@Check(FAST)
	def checkFieldDeclarationsPartOfSearchType(FieldExpr fieldExpr) {
		val search = (if (fieldExpr.eContainingFeature == TwitterSearchPackage.eINSTANCE.condition_Field) fieldExpr.eContainer.eContainer else fieldExpr.eContainer) as Search
		if (!(search).searchFor.fields.contains(fieldExpr.fieldDeclaration)) {
			error(
				'''«fieldExpr.fieldDeclaration.name» is not a field of the requested search type «search.searchFor.name»''', 
				TwitterSearchPackage.eINSTANCE.fieldExpr_FieldDeclaration
			);
		}
	}

	@Check(FAST)
	def checkConditionTypeMatchesFieldType(Condition condition) {
		if (!condition.eClass.name.toLowerCase.startsWith(condition.field.fieldDeclaration.fieldType.getName.toLowerCase)) {
			error(
				'''«condition.field.fieldDeclaration.name» has the wrong type.''', 
				TwitterSearchPackage.eINSTANCE.condition_Field
			);
		}
	}

}
