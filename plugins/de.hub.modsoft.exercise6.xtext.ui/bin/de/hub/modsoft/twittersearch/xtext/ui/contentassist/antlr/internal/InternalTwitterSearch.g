/*
 * generated by Xtext
 */
grammar InternalTwitterSearch;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.hub.modsoft.twittersearch.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.hub.modsoft.twittersearch.xtext.services.TwitterSearchGrammarAccess;

}

@parser::members {
 
 	private TwitterSearchGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TwitterSearchGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectTypeDclr
entryRuleObjectTypeDclr 
:
{ before(grammarAccess.getObjectTypeDclrRule()); }
	 ruleObjectTypeDclr
{ after(grammarAccess.getObjectTypeDclrRule()); } 
	 EOF 
;

// Rule ObjectTypeDclr
ruleObjectTypeDclr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getGroup()); }
(rule__ObjectTypeDclr__Group__0)
{ after(grammarAccess.getObjectTypeDclrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldDclr
entryRuleFieldDclr 
:
{ before(grammarAccess.getFieldDclrRule()); }
	 ruleFieldDclr
{ after(grammarAccess.getFieldDclrRule()); } 
	 EOF 
;

// Rule FieldDclr
ruleFieldDclr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldDclrAccess().getGroup()); }
(rule__FieldDclr__Group__0)
{ after(grammarAccess.getFieldDclrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSearch
entryRuleSearch 
:
{ before(grammarAccess.getSearchRule()); }
	 ruleSearch
{ after(grammarAccess.getSearchRule()); } 
	 EOF 
;

// Rule Search
ruleSearch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSearchAccess().getGroup()); }
(rule__Search__Group__0)
{ after(grammarAccess.getSearchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOption
entryRuleOption 
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionAccess().getAlternatives()); }
(rule__Option__Alternatives)
{ after(grammarAccess.getOptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywords
entryRuleKeywords 
:
{ before(grammarAccess.getKeywordsRule()); }
	 ruleKeywords
{ after(grammarAccess.getKeywordsRule()); } 
	 EOF 
;

// Rule Keywords
ruleKeywords
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordsAccess().getGroup()); }
(rule__Keywords__Group__0)
{ after(grammarAccess.getKeywordsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocation
entryRuleLocation 
:
{ before(grammarAccess.getLocationRule()); }
	 ruleLocation
{ after(grammarAccess.getLocationRule()); } 
	 EOF 
;

// Rule Location
ruleLocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocationAccess().getGroup()); }
(rule__Location__Group__0)
{ after(grammarAccess.getLocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTime
entryRuleTime 
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeAccess().getGroup()); }
(rule__Time__Group__0)
{ after(grammarAccess.getTimeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getAlternatives()); }
(rule__Condition__Alternatives)
{ after(grammarAccess.getConditionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringCondition
entryRuleStringCondition 
:
{ before(grammarAccess.getStringConditionRule()); }
	 ruleStringCondition
{ after(grammarAccess.getStringConditionRule()); } 
	 EOF 
;

// Rule StringCondition
ruleStringCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConditionAccess().getGroup()); }
(rule__StringCondition__Group__0)
{ after(grammarAccess.getStringConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntCondition
entryRuleIntCondition 
:
{ before(grammarAccess.getIntConditionRule()); }
	 ruleIntCondition
{ after(grammarAccess.getIntConditionRule()); } 
	 EOF 
;

// Rule IntCondition
ruleIntCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConditionAccess().getGroup()); }
(rule__IntCondition__Group__0)
{ after(grammarAccess.getIntConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanCondition
entryRuleBooleanCondition 
:
{ before(grammarAccess.getBooleanConditionRule()); }
	 ruleBooleanCondition
{ after(grammarAccess.getBooleanConditionRule()); } 
	 EOF 
;

// Rule BooleanCondition
ruleBooleanCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanConditionAccess().getFieldAssignment()); }
(rule__BooleanCondition__FieldAssignment)
{ after(grammarAccess.getBooleanConditionAccess().getFieldAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldExpression
entryRuleFieldExpression 
:
{ before(grammarAccess.getFieldExpressionRule()); }
	 ruleFieldExpression
{ after(grammarAccess.getFieldExpressionRule()); } 
	 EOF 
;

// Rule FieldExpression
ruleFieldExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldExpressionAccess().getFieldDeclarationAssignment()); }
(rule__FieldExpression__FieldDeclarationAssignment)
{ after(grammarAccess.getFieldExpressionAccess().getFieldDeclarationAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDATE
entryRuleDATE 
:
{ before(grammarAccess.getDATERule()); }
	 ruleDATE
{ after(grammarAccess.getDATERule()); } 
	 EOF 
;

// Rule DATE
ruleDATE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDATEAccess().getGroup()); }
(rule__DATE__Group__0)
{ after(grammarAccess.getDATEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule FieldType
ruleFieldType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getAlternatives()); }
(rule__FieldType__Alternatives)
{ after(grammarAccess.getFieldTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule StringOperators
ruleStringOperators
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOperatorsAccess().getAlternatives()); }
(rule__StringOperators__Alternatives)
{ after(grammarAccess.getStringOperatorsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule IntOperators
ruleIntOperators
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntOperatorsAccess().getAlternatives()); }
(rule__IntOperators__Alternatives)
{ after(grammarAccess.getIntOperatorsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DistanceUnit
ruleDistanceUnit
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistanceUnitAccess().getAlternatives()); }
(rule__DistanceUnit__Alternatives)
{ after(grammarAccess.getDistanceUnitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Option__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getKeywordsParserRuleCall_0()); }
	ruleKeywords
{ after(grammarAccess.getOptionAccess().getKeywordsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionAccess().getLocationParserRuleCall_1()); }
	ruleLocation
{ after(grammarAccess.getOptionAccess().getLocationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOptionAccess().getTimeParserRuleCall_2()); }
	ruleTime
{ after(grammarAccess.getOptionAccess().getTimeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getStringConditionParserRuleCall_0()); }
	ruleStringCondition
{ after(grammarAccess.getConditionAccess().getStringConditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getIntConditionParserRuleCall_1()); }
	ruleIntCondition
{ after(grammarAccess.getConditionAccess().getIntConditionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getBooleanConditionParserRuleCall_2()); }
	ruleBooleanCondition
{ after(grammarAccess.getConditionAccess().getBooleanConditionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getBooleanEnumLiteralDeclaration_0()); }
(	'BOOLEAN' 
)
{ after(grammarAccess.getFieldTypeAccess().getBooleanEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getIntEnumLiteralDeclaration_1()); }
(	'INT' 
)
{ after(grammarAccess.getFieldTypeAccess().getIntEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_2()); }
(	'STRING' 
)
{ after(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperators__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOperatorsAccess().getContainsEnumLiteralDeclaration_0()); }
(	'contains' 
)
{ after(grammarAccess.getStringOperatorsAccess().getContainsEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getStringOperatorsAccess().getContainsnotEnumLiteralDeclaration_1()); }
(	'containsnot' 
)
{ after(grammarAccess.getStringOperatorsAccess().getContainsnotEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntOperators__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntOperatorsAccess().getGtEnumLiteralDeclaration_0()); }
(	'>' 
)
{ after(grammarAccess.getIntOperatorsAccess().getGtEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getIntOperatorsAccess().getLtEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getIntOperatorsAccess().getLtEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getIntOperatorsAccess().getEqEnumLiteralDeclaration_2()); }
(	'=' 
)
{ after(grammarAccess.getIntOperatorsAccess().getEqEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getIntOperatorsAccess().getGeqEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getIntOperatorsAccess().getGeqEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getIntOperatorsAccess().getLeqEnumLiteralDeclaration_4()); }
(	'<=' 
)
{ after(grammarAccess.getIntOperatorsAccess().getLeqEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceUnit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistanceUnitAccess().getMiEnumLiteralDeclaration_0()); }
(	'mi' 
)
{ after(grammarAccess.getDistanceUnitAccess().getMiEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDistanceUnitAccess().getKmEnumLiteralDeclaration_1()); }
(	'km' 
)
{ after(grammarAccess.getDistanceUnitAccess().getKmEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTwitterAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getTwitterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getConfigurationKeyword_1()); }

	'configuration' 

{ after(grammarAccess.getModelAccess().getConfigurationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getModelAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getObjectTypesAssignment_3()); }
(rule__Model__ObjectTypesAssignment_3)*
{ after(grammarAccess.getModelAccess().getObjectTypesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSearchesKeyword_4()); }

	'searches' 

{ after(grammarAccess.getModelAccess().getSearchesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getModelAccess().getColonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSearchesAssignment_6()); }
(rule__Model__SearchesAssignment_6)*
{ after(grammarAccess.getModelAccess().getSearchesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ObjectTypeDclr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectTypeDclr__Group__0__Impl
	rule__ObjectTypeDclr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getObjecttypeKeyword_0()); }

	'objecttype' 

{ after(grammarAccess.getObjectTypeDclrAccess().getObjecttypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectTypeDclr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectTypeDclr__Group__1__Impl
	rule__ObjectTypeDclr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getNameAssignment_1()); }
(rule__ObjectTypeDclr__NameAssignment_1)
{ after(grammarAccess.getObjectTypeDclrAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectTypeDclr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectTypeDclr__Group__2__Impl
	rule__ObjectTypeDclr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getObjectTypeDclrAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectTypeDclr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectTypeDclr__Group__3__Impl
	rule__ObjectTypeDclr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getFieldsAssignment_3()); }
(rule__ObjectTypeDclr__FieldsAssignment_3)*
{ after(grammarAccess.getObjectTypeDclrAccess().getFieldsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectTypeDclr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectTypeDclr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getObjectTypeDclrAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FieldDclr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDclr__Group__0__Impl
	rule__FieldDclr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDclr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDclrAccess().getFieldKeyword_0()); }

	'field' 

{ after(grammarAccess.getFieldDclrAccess().getFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDclr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDclr__Group__1__Impl
	rule__FieldDclr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDclr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDclrAccess().getNameAssignment_1()); }
(rule__FieldDclr__NameAssignment_1)
{ after(grammarAccess.getFieldDclrAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDclr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDclr__Group__2__Impl
	rule__FieldDclr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDclr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDclrAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFieldDclrAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDclr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDclr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDclr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDclrAccess().getFieldTypeAssignment_3()); }
(rule__FieldDclr__FieldTypeAssignment_3)
{ after(grammarAccess.getFieldDclrAccess().getFieldTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Search__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__0__Impl
	rule__Search__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSearchAction_0()); }
(

)
{ after(grammarAccess.getSearchAccess().getSearchAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__1__Impl
	rule__Search__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSearchKeyword_1()); }

	'search' 

{ after(grammarAccess.getSearchAccess().getSearchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__2__Impl
	rule__Search__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getSearchAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__3__Impl
	rule__Search__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSearchForAssignment_3()); }
(rule__Search__SearchForAssignment_3)
{ after(grammarAccess.getSearchAccess().getSearchForAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__4__Impl
	rule__Search__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getOptionsAssignment_4()); }
(rule__Search__OptionsAssignment_4)*
{ after(grammarAccess.getSearchAccess().getOptionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__5__Impl
	rule__Search__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getGroup_5()); }
(rule__Search__Group_5__0)?
{ after(grammarAccess.getSearchAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__6__Impl
	rule__Search__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getGroup_6()); }
(rule__Search__Group_6__0)?
{ after(grammarAccess.getSearchAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getSearchAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Search__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_5__0__Impl
	rule__Search__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getWhereKeyword_5_0()); }

	'where' 

{ after(grammarAccess.getSearchAccess().getWhereKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_5__1__Impl
	rule__Search__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getConditionsAssignment_5_1()); }
(rule__Search__ConditionsAssignment_5_1)
{ after(grammarAccess.getSearchAccess().getConditionsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getGroup_5_2()); }
(rule__Search__Group_5_2__0)*
{ after(grammarAccess.getSearchAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Search__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_5_2__0__Impl
	rule__Search__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getAmpersandKeyword_5_2_0()); }

	'&' 

{ after(grammarAccess.getSearchAccess().getAmpersandKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getConditionsAssignment_5_2_1()); }
(rule__Search__ConditionsAssignment_5_2_1)
{ after(grammarAccess.getSearchAccess().getConditionsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Search__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_6__0__Impl
	rule__Search__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSortKeyword_6_0()); }

	'sort' 

{ after(grammarAccess.getSearchAccess().getSortKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Search__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Search__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Search__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSortationAssignment_6_1()); }
(rule__Search__SortationAssignment_6_1)
{ after(grammarAccess.getSearchAccess().getSortationAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Keywords__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keywords__Group__0__Impl
	rule__Keywords__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getWithKeyword_0()); }

	'with' 

{ after(grammarAccess.getKeywordsAccess().getWithKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keywords__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keywords__Group__1__Impl
	rule__Keywords__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getKeywordsAssignment_1()); }
(rule__Keywords__KeywordsAssignment_1)
{ after(grammarAccess.getKeywordsAccess().getKeywordsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keywords__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keywords__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getGroup_2()); }
(rule__Keywords__Group_2__0)*
{ after(grammarAccess.getKeywordsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Keywords__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keywords__Group_2__0__Impl
	rule__Keywords__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getKeywordsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keywords__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keywords__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getKeywordsAssignment_2_1()); }
(rule__Keywords__KeywordsAssignment_2_1)
{ after(grammarAccess.getKeywordsAccess().getKeywordsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Location__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__0__Impl
	rule__Location__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getInKeyword_0()); }

	'in' 

{ after(grammarAccess.getLocationAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__1__Impl
	rule__Location__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getGeoKeyword_1()); }

	'geo' 

{ after(grammarAccess.getLocationAccess().getGeoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__2__Impl
	rule__Location__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getLocationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__3__Impl
	rule__Location__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLonAssignment_3()); }
(rule__Location__LonAssignment_3)
{ after(grammarAccess.getLocationAccess().getLonAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__4__Impl
	rule__Location__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getLocationAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__5__Impl
	rule__Location__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLatAssignment_5()); }
(rule__Location__LatAssignment_5)
{ after(grammarAccess.getLocationAccess().getLatAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__6__Impl
	rule__Location__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getLocationAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__7__Impl
	rule__Location__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getRadiusAssignment_7()); }
(rule__Location__RadiusAssignment_7)
{ after(grammarAccess.getLocationAccess().getRadiusAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__8__Impl
	rule__Location__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getRadiusUnitAssignment_8()); }
(rule__Location__RadiusUnitAssignment_8)
{ after(grammarAccess.getLocationAccess().getRadiusUnitAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getLocationAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Time__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getBeforeKeyword_0()); }

	'before' 

{ after(grammarAccess.getTimeAccess().getBeforeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getBeforeAssignment_1()); }
(rule__Time__BeforeAssignment_1)
{ after(grammarAccess.getTimeAccess().getBeforeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringCondition__Group__0__Impl
	rule__StringCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getFieldAssignment_0()); }
(rule__StringCondition__FieldAssignment_0)
{ after(grammarAccess.getStringConditionAccess().getFieldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringCondition__Group__1__Impl
	rule__StringCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getStringConditionAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringCondition__Group__2__Impl
	rule__StringCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getOperatorAssignment_2()); }
(rule__StringCondition__OperatorAssignment_2)
{ after(grammarAccess.getStringConditionAccess().getOperatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringCondition__Group__3__Impl
	rule__StringCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getStringConditionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringCondition__Group__4__Impl
	rule__StringCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getOperandAssignment_4()); }
(rule__StringCondition__OperandAssignment_4)
{ after(grammarAccess.getStringConditionAccess().getOperandAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getStringConditionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntCondition__Group__0__Impl
	rule__IntCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConditionAccess().getFieldAssignment_0()); }
(rule__IntCondition__FieldAssignment_0)
{ after(grammarAccess.getIntConditionAccess().getFieldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntCondition__Group__1__Impl
	rule__IntCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConditionAccess().getOperatorAssignment_1()); }
(rule__IntCondition__OperatorAssignment_1)
{ after(grammarAccess.getIntConditionAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntCondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConditionAccess().getOperandAssignment_2()); }
(rule__IntCondition__OperandAssignment_2)
{ after(grammarAccess.getIntConditionAccess().getOperandAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
	rule__DOUBLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup_2()); }
(rule__DOUBLE__Group_2__0)?
{ after(grammarAccess.getDOUBLEAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DOUBLE__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_2__0__Impl
	rule__DOUBLE__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DATE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATE__Group__0__Impl
	rule__DATE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATE__Group__1__Impl
	rule__DATE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATEAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDATEAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATE__Group__2__Impl
	rule__DATE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATE__Group__3__Impl
	rule__DATE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATEAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getDATEAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATE__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); }
	RULE_INT
{ after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__ObjectTypesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getObjectTypesObjectTypeDclrParserRuleCall_3_0()); }
	ruleObjectTypeDclr{ after(grammarAccess.getModelAccess().getObjectTypesObjectTypeDclrParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SearchesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSearchesSearchParserRuleCall_6_0()); }
	ruleSearch{ after(grammarAccess.getModelAccess().getSearchesSearchParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjectTypeDclrAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectTypeDclr__FieldsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectTypeDclrAccess().getFieldsFieldDclrParserRuleCall_3_0()); }
	ruleFieldDclr{ after(grammarAccess.getObjectTypeDclrAccess().getFieldsFieldDclrParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDclr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDclrAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFieldDclrAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDclr__FieldTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDclrAccess().getFieldTypeFieldTypeEnumRuleCall_3_0()); }
	ruleFieldType{ after(grammarAccess.getFieldDclrAccess().getFieldTypeFieldTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Search__SearchForAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSearchForTwitterObjectTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getSearchAccess().getSearchForTwitterObjectTypeIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getSearchAccess().getSearchForTwitterObjectTypeIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getSearchAccess().getSearchForTwitterObjectTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Search__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getOptionsOptionParserRuleCall_4_0()); }
	ruleOption{ after(grammarAccess.getSearchAccess().getOptionsOptionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Search__ConditionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getConditionsConditionParserRuleCall_5_1_0()); }
	ruleCondition{ after(grammarAccess.getSearchAccess().getConditionsConditionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Search__ConditionsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getConditionsConditionParserRuleCall_5_2_1_0()); }
	ruleCondition{ after(grammarAccess.getSearchAccess().getConditionsConditionParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Search__SortationAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSearchAccess().getSortationFieldExpressionParserRuleCall_6_1_0()); }
	ruleFieldExpression{ after(grammarAccess.getSearchAccess().getSortationFieldExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__KeywordsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getKeywordsSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getKeywordsAccess().getKeywordsSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keywords__KeywordsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordsAccess().getKeywordsSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getKeywordsAccess().getKeywordsSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__LonAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLonDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getLocationAccess().getLonDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__LatAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getLatDOUBLEParserRuleCall_5_0()); }
	ruleDOUBLE{ after(grammarAccess.getLocationAccess().getLatDOUBLEParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__RadiusAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getRadiusDOUBLEParserRuleCall_7_0()); }
	ruleDOUBLE{ after(grammarAccess.getLocationAccess().getRadiusDOUBLEParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__RadiusUnitAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getRadiusUnitDistanceUnitEnumRuleCall_8_0()); }
	ruleDistanceUnit{ after(grammarAccess.getLocationAccess().getRadiusUnitDistanceUnitEnumRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__BeforeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getBeforeDATEParserRuleCall_1_0()); }
	ruleDATE{ after(grammarAccess.getTimeAccess().getBeforeDATEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__FieldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getFieldFieldExpressionParserRuleCall_0_0()); }
	ruleFieldExpression{ after(grammarAccess.getStringConditionAccess().getFieldFieldExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__OperatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getOperatorStringOperatorsEnumRuleCall_2_0()); }
	ruleStringOperators{ after(grammarAccess.getStringConditionAccess().getOperatorStringOperatorsEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringCondition__OperandAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConditionAccess().getOperandSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getStringConditionAccess().getOperandSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntCondition__FieldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConditionAccess().getFieldFieldExpressionParserRuleCall_0_0()); }
	ruleFieldExpression{ after(grammarAccess.getIntConditionAccess().getFieldFieldExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntCondition__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConditionAccess().getOperatorIntOperatorsEnumRuleCall_1_0()); }
	ruleIntOperators{ after(grammarAccess.getIntConditionAccess().getOperatorIntOperatorsEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntCondition__OperandAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConditionAccess().getOperandINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getIntConditionAccess().getOperandINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanCondition__FieldAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanConditionAccess().getFieldFieldExpressionParserRuleCall_0()); }
	ruleFieldExpression{ after(grammarAccess.getBooleanConditionAccess().getFieldFieldExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldExpression__FieldDeclarationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldExpressionAccess().getFieldDeclarationFieldDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getFieldExpressionAccess().getFieldDeclarationFieldDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldExpressionAccess().getFieldDeclarationFieldDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFieldExpressionAccess().getFieldDeclarationFieldDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


